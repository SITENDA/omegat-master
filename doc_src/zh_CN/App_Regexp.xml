<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../docbook-xml-4.5/docbookx.dtd">
<appendix id="appendix.regexp">
  <title>正则表达式</title>

  <para>在查找功能和片段分割规则中所使用的是 Java 所支持的正则表达式。如果你需要更多详细信息，请参阅 <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html">Java 正则表达式文档</ulink>。参见以下的参考和范例。</para>

  <note>
    <para>本章内容是为高级用户准备的，用于定义自己的分割规则变体或设计更复杂更强大的关键字查找内容。</para>
  </note>

  <table>
    <title>正则表达式 - 标志</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">结构</entry>

          <entry align="left">……匹配以下内容：</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>(?i)</entry>

          <entry>启用不区分大小写的匹配（默认情况下，模式区分大小写）。</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>正则表达式 - 字符</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">结构</entry>

          <entry align="left">……匹配以下内容：</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>x</entry>

          <entry>字符 x，除了以下情况……</entry>
        </row>

        <row>
          <entry>\uhhhh</entry>

          <entry>十六进制值为 0xhhhh 的字符</entry>
        </row>

        <row>
          <entry>\t</entry>

          <entry>Tab（制表符）（'\u0009'）</entry>
        </row>

        <row>
          <entry>\n</entry>

          <entry>新行（换行）（'\u000A'）</entry>
        </row>

        <row>
          <entry>\r</entry>

          <entry>回车（'\u000D'）</entry>
        </row>

        <row>
          <entry>\f</entry>

          <entry>换页（'\u000C'）</entry>
        </row>

        <row>
          <entry>\a</entry>

          <entry>告警（响铃）（'\u0007'）</entry>
        </row>

        <row>
          <entry>\e</entry>

          <entry>Esc（退出）（'\u001B'）</entry>
        </row>

        <row>
          <entry>\cx</entry>

          <entry>对应于 x 的控制字符</entry>
        </row>

        <row>
          <entry>\0n</entry>

          <entry>八进制值为 0n（0 &lt;= n &lt;= 7）的字符</entry>
        </row>

        <row>
          <entry>\0nn</entry>

          <entry>八进制值为 0nn（0 &lt;= n &lt;= 7）的字符</entry>
        </row>

        <row>
          <entry>\0mnn</entry>

          <entry>八进制值为 0mnn（0 &lt;= m &lt;= 3, 0 &lt;= n &lt;= 7）的字符</entry>
        </row>

        <row>
          <entry>\xhh</entry>

          <entry>十六进制值为 0xhh 的字符</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>正则表达式 - 转义</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">结构</entry>

          <entry align="left">...匹配下列内容</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>\</entry>

          <entry>不匹配任何内容，但会转义后继的字符。需要输入元字符 !$()*+.&lt;&gt;?[\]^{|} 之一来匹配其自身时就必须这样。</entry>
        </row>

        <row>
          <entry>\\</entry>

          <entry>比如，这是反斜杠字符</entry>
        </row>

        <row>
          <entry>\Q</entry>

          <entry>不匹配任何内容，但转义后继 \E 之前的所有字符</entry>
        </row>

        <row>
          <entry>\E</entry>

          <entry>不匹配任何内容，但结束由 \Q 开始的转义</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>正则表达式 - Unicode 字区与分类类别</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">结构</entry>

          <entry align="left">...匹配下列内容</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>\p{InGreek}</entry>

          <entry>希腊字母区中的字符（单<ulink url="http://download.oracle.com/javase/1.6.0/docs/api/java/util/regex/Pattern.html#ubc">字区</ulink>）</entry>
        </row>

        <row>
          <entry>\p{Lu}</entry>

          <entry>大写字母（单<ulink url="http://download.oracle.com/javase/1.6.0/docs/api/java/util/regex/Pattern.html#ubc">分类</ulink>）</entry>
        </row>

        <row>
          <entry>\p{Sc}</entry>

          <entry>货币符号</entry>
        </row>

        <row>
          <entry>\P{InGreek}</entry>

          <entry>任何不在希腊字母区中的字符（取反）</entry>
        </row>

        <row>
          <entry>[\p{L}&amp;&amp;[^\p{Lu}]]</entry>

          <entry>除大写字母外的所有字母（减法）</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>正则表达式 - 字符类</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">结构</entry>

          <entry align="left">...匹配下列内容</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>[abc]</entry>

          <entry>a、b 或 c（单类）</entry>
        </row>

        <row>
          <entry>[^abc]</entry>

          <entry>除 a、b 或 c 之外的任何字符（取反）</entry>
        </row>

        <row>
          <entry>[a-zA-Z]</entry>

          <entry>a 到 z 和 A 到 Z 的字符，包含边界（区间）</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>正则表达式 - 预定义字符类</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">结构</entry>

          <entry align="left">...匹配下列内容</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>.</entry>

          <entry>任意字符（行终止符除外）</entry>
        </row>

        <row>
          <entry>\d</entry>

          <entry>数字：[0-9]</entry>
        </row>

        <row>
          <entry>\D</entry>

          <entry>非数字：[^0-9]</entry>
        </row>

        <row>
          <entry>\s</entry>

          <entry>空白字符：[ \t\n\x0B\f\r]</entry>
        </row>

        <row>
          <entry>\S</entry>

          <entry>非空白字符：[^\s]</entry>
        </row>

        <row>
          <entry>\w</entry>

          <entry>单词字符：[a-zA-Z_0-9]</entry>
        </row>

        <row>
          <entry>\W</entry>

          <entry>非单词字符：[^\w]</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>正则表达式 - 边界匹配符</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">结构</entry>

          <entry align="left">...匹配下列内容</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>^</entry>

          <entry>行首</entry>
        </row>

        <row>
          <entry>$</entry>

          <entry>行尾</entry>
        </row>

        <row>
          <entry>\b</entry>

          <entry>单词边界</entry>
        </row>

        <row>
          <entry>\B</entry>

          <entry>非单词边界</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <table>
    <title>正则表达式 - 贪婪量词</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">结构</entry>

          <entry align="left">...匹配下列内容</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>X<emphasis>?</emphasis></entry>

          <entry>X，出现一次或不出现</entry>
        </row>

        <row>
          <entry>X<emphasis>*</emphasis></entry>

          <entry>X，出现零次或多次</entry>
        </row>

        <row>
          <entry>X<emphasis>+</emphasis></entry>

          <entry>X，出现一次或多次</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <note>
    <para>贪婪量词会尽可能多地匹配。例如，<emphasis>a+</emphasis> 会匹配 <emphasis>aaabbb</emphasis> 中的 aaa</para>
  </note>

  <table>
    <title>正则表达式 - 懒惰（非贪婪）量词</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">结构</entry>

          <entry align="left">...匹配下列内容</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>X??</entry>

          <entry>X，出现一次或不出现</entry>
        </row>

        <row>
          <entry>X*?</entry>

          <entry>X，出现零次或多次</entry>
        </row>

        <row>
          <entry>X+?</entry>

          <entry>X，出现一次或多次</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <note>
    <para>非贪婪量词会尽可能少地匹配。例如，<emphasis>a+?</emphasis> 会匹配 <emphasis>aaabbb</emphasis> 中的第一个 <emphasis>a</emphasis></para>
  </note>

  <table>
    <title>正则表达式 - 逻辑运算符</title>

    <tgroup align="left" cols="2" rowsep="1">
      <colspec align="left" colnum="1"/>

      <thead>
        <row>
          <entry align="left">结构</entry>

          <entry align="left">...匹配下列内容</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry>XY</entry>

          <entry>X 后跟着 Y</entry>
        </row>

        <row>
          <entry>X|Y</entry>

          <entry>X 或 Y</entry>
        </row>

        <row>
          <entry>(XY)</entry>

          <entry>XY 作为整体出现</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <section id="regex.tools.and.examples.of.use">
    <title>正则表达式工具和使用实例</title>

    <para>有许多交互式工具可用于开发和测试正则表达式。它们大致上遵循相同的模式（见下面的 Regular Expression Tester 示例）：正则表达式（顶上的条目）分析要进行查找的文本（中间的文本框），产生命中，将其显示在结果文本框中。</para>

    <figure id="regerx.tester">
      <title>Regex Tester</title>

      <mediaobject>
        <imageobject role="html">
          <imagedata fileref="images/RegexTester.png"/>
        </imageobject>

        <imageobject role="fo">
          <imagedata fileref="images/RegexTester.png" width="80%"/>
        </imageobject>
      </mediaobject>
    </figure>

    <para>参见 Windows、Linux、FreeBSD 版本的独立工具 <ulink url="http://weitz.de/regex-coach/">The Regex Coach</ulink>。这和上面的示例大致上相同。</para>

    <para>在 <application>OmegaT</application> 本身就可以找到很多很有用的正则表达式案例（参见 选项 &gt; 分割）。以下列出了在翻译记忆库中搜索时可能会用到的表达式：</para>

    <table>
      <title>正则表达式 - 翻译中用到的正则表达式示例</title>

      <tgroup align="left" cols="2" rowsep="1">
        <colspec align="left" colnum="1"/>

        <thead>
          <row>
            <entry>正则表达式</entry>

            <entry>查找以下内容：</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>(\b\w+\b)\s\1\b</entry>

            <entry>重复单词</entry>
          </row>

          <row>
            <entry>[\.,]\s*[\.,]+</entry>

            <entry>一个逗号或句点后面跟着若干空格然后是另一个逗号或句点</entry>
          </row>

          <row>
            <entry>\. \s+$</entry>

            <entry>在行尾位于句点后的额外空格</entry>
          </row>

          <row>
            <entry>\s+a\s+[aeiou]</entry>

            <entry>英语：以元音开头的单词前面应当是 “an” 而不是 “a”</entry>
          </row>

          <row>
            <entry>\s+an\s+[^aeiou]</entry>

            <entry>英语：检查的内容与上一条一样，但针对辅音（“a” 而非 “an”)</entry>
          </row>

          <row>
            <entry>\s{2,}</entry>

            <entry>多个空格</entry>
          </row>

          <row>
            <entry>\.[A-Z]</entry>

            <entry>句点后面跟着一个大写字母——在句点和下一个句子开头之间是否少了个空格？</entry>
          </row>

          <row>
            <entry>\bis\b</entry>

            <entry>查找 “is”，但不匹配 “this” 或 “isn't” 等。</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>
</appendix>